import { Empty } from "../../../google/protobuf/empty";
import { AccessLogEntry, DecisionLogEntry } from "../../audit/v1/audit";
import { Effect } from "../../effect/v1/effect";
import { OutputEntry, PlanResourcesFilter } from "../../engine/v1/engine";
import { Policy } from "../../policy/v1/policy";
import { Schema, ValidationError } from "../../schema/v1/schema";
export declare const protobufPackage = "cerbos.response.v1";
export interface PlanResourcesResponse {
    requestId: string;
    action: string;
    resourceKind: string;
    policyVersion: string;
    filter: PlanResourcesFilter | undefined;
    meta: PlanResourcesResponse_Meta | undefined;
    validationErrors: ValidationError[];
    cerbosCallId: string;
}
export interface PlanResourcesResponse_Meta {
    filterDebug: string;
    matchedScope: string;
}
export interface CheckResourceSetResponse {
    requestId: string;
    resourceInstances: {
        [key: string]: CheckResourceSetResponse_ActionEffectMap;
    };
    meta: CheckResourceSetResponse_Meta | undefined;
}
export interface CheckResourceSetResponse_ActionEffectMap {
    actions: {
        [key: string]: Effect;
    };
    validationErrors: ValidationError[];
}
export interface CheckResourceSetResponse_ActionEffectMap_ActionsEntry {
    key: string;
    value: Effect;
}
export interface CheckResourceSetResponse_Meta {
    resourceInstances: {
        [key: string]: CheckResourceSetResponse_Meta_ActionMeta;
    };
}
export interface CheckResourceSetResponse_Meta_EffectMeta {
    matchedPolicy: string;
    matchedScope: string;
}
export interface CheckResourceSetResponse_Meta_ActionMeta {
    actions: {
        [key: string]: CheckResourceSetResponse_Meta_EffectMeta;
    };
    effectiveDerivedRoles: string[];
}
export interface CheckResourceSetResponse_Meta_ActionMeta_ActionsEntry {
    key: string;
    value: CheckResourceSetResponse_Meta_EffectMeta | undefined;
}
export interface CheckResourceSetResponse_Meta_ResourceInstancesEntry {
    key: string;
    value: CheckResourceSetResponse_Meta_ActionMeta | undefined;
}
export interface CheckResourceSetResponse_ResourceInstancesEntry {
    key: string;
    value: CheckResourceSetResponse_ActionEffectMap | undefined;
}
export interface CheckResourceBatchResponse {
    requestId: string;
    results: CheckResourceBatchResponse_ActionEffectMap[];
}
export interface CheckResourceBatchResponse_ActionEffectMap {
    resourceId: string;
    actions: {
        [key: string]: Effect;
    };
    validationErrors: ValidationError[];
}
export interface CheckResourceBatchResponse_ActionEffectMap_ActionsEntry {
    key: string;
    value: Effect;
}
export interface CheckResourcesResponse {
    requestId: string;
    results: CheckResourcesResponse_ResultEntry[];
    cerbosCallId: string;
}
export interface CheckResourcesResponse_ResultEntry {
    resource: CheckResourcesResponse_ResultEntry_Resource | undefined;
    actions: {
        [key: string]: Effect;
    };
    validationErrors: ValidationError[];
    meta: CheckResourcesResponse_ResultEntry_Meta | undefined;
    outputs: OutputEntry[];
}
export interface CheckResourcesResponse_ResultEntry_Resource {
    id: string;
    kind: string;
    policyVersion: string;
    scope: string;
}
export interface CheckResourcesResponse_ResultEntry_Meta {
    actions: {
        [key: string]: CheckResourcesResponse_ResultEntry_Meta_EffectMeta;
    };
    effectiveDerivedRoles: string[];
}
export interface CheckResourcesResponse_ResultEntry_Meta_EffectMeta {
    matchedPolicy: string;
    matchedScope: string;
}
export interface CheckResourcesResponse_ResultEntry_Meta_ActionsEntry {
    key: string;
    value: CheckResourcesResponse_ResultEntry_Meta_EffectMeta | undefined;
}
export interface CheckResourcesResponse_ResultEntry_ActionsEntry {
    key: string;
    value: Effect;
}
export interface AddOrUpdatePolicyResponse {
    success: Empty | undefined;
}
export interface ListAuditLogEntriesResponse {
    entry?: {
        $case: "accessLogEntry";
        accessLogEntry: AccessLogEntry;
    } | {
        $case: "decisionLogEntry";
        decisionLogEntry: DecisionLogEntry;
    } | undefined;
}
export interface ServerInfoResponse {
    version: string;
    commit: string;
    buildDate: string;
}
export interface ListPoliciesResponse {
    policyIds: string[];
}
export interface GetPolicyResponse {
    policies: Policy[];
}
export interface DisablePolicyResponse {
    disabledPolicies: number;
}
export interface EnablePolicyResponse {
    enabledPolicies: number;
}
export interface AddOrUpdateSchemaResponse {
}
export interface ListSchemasResponse {
    schemaIds: string[];
}
export interface GetSchemaResponse {
    schemas: Schema[];
}
export interface DeleteSchemaResponse {
    deletedSchemas: number;
}
export interface ReloadStoreResponse {
}
export declare const PlanResourcesResponse: {
    fromJSON(object: any): PlanResourcesResponse;
    toJSON(message: PlanResourcesResponse): unknown;
};
export declare const PlanResourcesResponse_Meta: {
    fromJSON(object: any): PlanResourcesResponse_Meta;
    toJSON(message: PlanResourcesResponse_Meta): unknown;
};
export declare const CheckResourceSetResponse: {
    fromJSON(object: any): CheckResourceSetResponse;
    toJSON(message: CheckResourceSetResponse): unknown;
};
export declare const CheckResourceSetResponse_ActionEffectMap: {
    fromJSON(object: any): CheckResourceSetResponse_ActionEffectMap;
    toJSON(message: CheckResourceSetResponse_ActionEffectMap): unknown;
};
export declare const CheckResourceSetResponse_ActionEffectMap_ActionsEntry: {
    fromJSON(object: any): CheckResourceSetResponse_ActionEffectMap_ActionsEntry;
    toJSON(message: CheckResourceSetResponse_ActionEffectMap_ActionsEntry): unknown;
};
export declare const CheckResourceSetResponse_Meta: {
    fromJSON(object: any): CheckResourceSetResponse_Meta;
    toJSON(message: CheckResourceSetResponse_Meta): unknown;
};
export declare const CheckResourceSetResponse_Meta_EffectMeta: {
    fromJSON(object: any): CheckResourceSetResponse_Meta_EffectMeta;
    toJSON(message: CheckResourceSetResponse_Meta_EffectMeta): unknown;
};
export declare const CheckResourceSetResponse_Meta_ActionMeta: {
    fromJSON(object: any): CheckResourceSetResponse_Meta_ActionMeta;
    toJSON(message: CheckResourceSetResponse_Meta_ActionMeta): unknown;
};
export declare const CheckResourceSetResponse_Meta_ActionMeta_ActionsEntry: {
    fromJSON(object: any): CheckResourceSetResponse_Meta_ActionMeta_ActionsEntry;
    toJSON(message: CheckResourceSetResponse_Meta_ActionMeta_ActionsEntry): unknown;
};
export declare const CheckResourceSetResponse_Meta_ResourceInstancesEntry: {
    fromJSON(object: any): CheckResourceSetResponse_Meta_ResourceInstancesEntry;
    toJSON(message: CheckResourceSetResponse_Meta_ResourceInstancesEntry): unknown;
};
export declare const CheckResourceSetResponse_ResourceInstancesEntry: {
    fromJSON(object: any): CheckResourceSetResponse_ResourceInstancesEntry;
    toJSON(message: CheckResourceSetResponse_ResourceInstancesEntry): unknown;
};
export declare const CheckResourceBatchResponse: {
    fromJSON(object: any): CheckResourceBatchResponse;
    toJSON(message: CheckResourceBatchResponse): unknown;
};
export declare const CheckResourceBatchResponse_ActionEffectMap: {
    fromJSON(object: any): CheckResourceBatchResponse_ActionEffectMap;
    toJSON(message: CheckResourceBatchResponse_ActionEffectMap): unknown;
};
export declare const CheckResourceBatchResponse_ActionEffectMap_ActionsEntry: {
    fromJSON(object: any): CheckResourceBatchResponse_ActionEffectMap_ActionsEntry;
    toJSON(message: CheckResourceBatchResponse_ActionEffectMap_ActionsEntry): unknown;
};
export declare const CheckResourcesResponse: {
    fromJSON(object: any): CheckResourcesResponse;
    toJSON(message: CheckResourcesResponse): unknown;
};
export declare const CheckResourcesResponse_ResultEntry: {
    fromJSON(object: any): CheckResourcesResponse_ResultEntry;
    toJSON(message: CheckResourcesResponse_ResultEntry): unknown;
};
export declare const CheckResourcesResponse_ResultEntry_Resource: {
    fromJSON(object: any): CheckResourcesResponse_ResultEntry_Resource;
    toJSON(message: CheckResourcesResponse_ResultEntry_Resource): unknown;
};
export declare const CheckResourcesResponse_ResultEntry_Meta: {
    fromJSON(object: any): CheckResourcesResponse_ResultEntry_Meta;
    toJSON(message: CheckResourcesResponse_ResultEntry_Meta): unknown;
};
export declare const CheckResourcesResponse_ResultEntry_Meta_EffectMeta: {
    fromJSON(object: any): CheckResourcesResponse_ResultEntry_Meta_EffectMeta;
    toJSON(message: CheckResourcesResponse_ResultEntry_Meta_EffectMeta): unknown;
};
export declare const CheckResourcesResponse_ResultEntry_Meta_ActionsEntry: {
    fromJSON(object: any): CheckResourcesResponse_ResultEntry_Meta_ActionsEntry;
    toJSON(message: CheckResourcesResponse_ResultEntry_Meta_ActionsEntry): unknown;
};
export declare const CheckResourcesResponse_ResultEntry_ActionsEntry: {
    fromJSON(object: any): CheckResourcesResponse_ResultEntry_ActionsEntry;
    toJSON(message: CheckResourcesResponse_ResultEntry_ActionsEntry): unknown;
};
export declare const AddOrUpdatePolicyResponse: {
    fromJSON(object: any): AddOrUpdatePolicyResponse;
    toJSON(message: AddOrUpdatePolicyResponse): unknown;
};
export declare const ListAuditLogEntriesResponse: {
    fromJSON(object: any): ListAuditLogEntriesResponse;
    toJSON(message: ListAuditLogEntriesResponse): unknown;
};
export declare const ServerInfoResponse: {
    fromJSON(object: any): ServerInfoResponse;
    toJSON(message: ServerInfoResponse): unknown;
};
export declare const ListPoliciesResponse: {
    fromJSON(object: any): ListPoliciesResponse;
    toJSON(message: ListPoliciesResponse): unknown;
};
export declare const GetPolicyResponse: {
    fromJSON(object: any): GetPolicyResponse;
    toJSON(message: GetPolicyResponse): unknown;
};
export declare const DisablePolicyResponse: {
    fromJSON(object: any): DisablePolicyResponse;
    toJSON(message: DisablePolicyResponse): unknown;
};
export declare const EnablePolicyResponse: {
    fromJSON(object: any): EnablePolicyResponse;
    toJSON(message: EnablePolicyResponse): unknown;
};
export declare const AddOrUpdateSchemaResponse: {
    fromJSON(_: any): AddOrUpdateSchemaResponse;
    toJSON(_: AddOrUpdateSchemaResponse): unknown;
};
export declare const ListSchemasResponse: {
    fromJSON(object: any): ListSchemasResponse;
    toJSON(message: ListSchemasResponse): unknown;
};
export declare const GetSchemaResponse: {
    fromJSON(object: any): GetSchemaResponse;
    toJSON(message: GetSchemaResponse): unknown;
};
export declare const DeleteSchemaResponse: {
    fromJSON(object: any): DeleteSchemaResponse;
    toJSON(message: DeleteSchemaResponse): unknown;
};
export declare const ReloadStoreResponse: {
    fromJSON(_: any): ReloadStoreResponse;
    toJSON(_: ReloadStoreResponse): unknown;
};
//# sourceMappingURL=response.d.ts.map