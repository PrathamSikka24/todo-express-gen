import { Duration } from "../../../google/protobuf/duration";
import { PlanResourcesInput_Resource, Principal, Resource } from "../../engine/v1/engine";
import { Policy } from "../../policy/v1/policy";
import { Schema } from "../../schema/v1/schema";
export declare const protobufPackage = "cerbos.request.v1";
export interface PlanResourcesRequest {
    requestId: string;
    action: string;
    principal: Principal | undefined;
    resource: PlanResourcesInput_Resource | undefined;
    auxData: AuxData | undefined;
    includeMeta: boolean;
}
export interface CheckResourceSetRequest {
    requestId: string;
    actions: string[];
    principal: Principal | undefined;
    resource: ResourceSet | undefined;
    includeMeta: boolean;
    auxData: AuxData | undefined;
}
export interface ResourceSet {
    kind: string;
    policyVersion: string;
    instances: {
        [key: string]: AttributesMap;
    };
    scope: string;
}
export interface ResourceSet_InstancesEntry {
    key: string;
    value: AttributesMap | undefined;
}
export interface AttributesMap {
    attr: {
        [key: string]: any | undefined;
    };
}
export interface AttributesMap_AttrEntry {
    key: string;
    value: any | undefined;
}
export interface CheckResourceBatchRequest {
    requestId: string;
    principal: Principal | undefined;
    resources: CheckResourceBatchRequest_BatchEntry[];
    auxData: AuxData | undefined;
}
export interface CheckResourceBatchRequest_BatchEntry {
    actions: string[];
    resource: Resource | undefined;
}
export interface CheckResourcesRequest {
    requestId: string;
    includeMeta: boolean;
    principal: Principal | undefined;
    resources: CheckResourcesRequest_ResourceEntry[];
    auxData: AuxData | undefined;
}
export interface CheckResourcesRequest_ResourceEntry {
    actions: string[];
    resource: Resource | undefined;
}
export interface AuxData {
    jwt: AuxData_JWT | undefined;
}
export interface AuxData_JWT {
    token: string;
    keySetId: string;
}
export interface AddOrUpdatePolicyRequest {
    policies: Policy[];
}
export interface ListAuditLogEntriesRequest {
    kind: ListAuditLogEntriesRequest_Kind;
    filter?: {
        $case: "tail";
        tail: number;
    } | {
        $case: "between";
        between: ListAuditLogEntriesRequest_TimeRange;
    } | {
        $case: "since";
        since: Duration;
    } | {
        $case: "lookup";
        lookup: string;
    } | undefined;
}
export declare enum ListAuditLogEntriesRequest_Kind {
    KIND_UNSPECIFIED = 0,
    KIND_ACCESS = 1,
    KIND_DECISION = 2
}
export declare function listAuditLogEntriesRequest_KindFromJSON(object: any): ListAuditLogEntriesRequest_Kind;
export declare function listAuditLogEntriesRequest_KindToJSON(object: ListAuditLogEntriesRequest_Kind): string;
export interface ListAuditLogEntriesRequest_TimeRange {
    start: Date | undefined;
    end: Date | undefined;
}
export interface ServerInfoRequest {
}
export interface ListPoliciesRequest {
    includeDisabled: boolean;
    nameRegexp: string;
    scopeRegexp: string;
    versionRegexp: string;
}
export interface GetPolicyRequest {
    id: string[];
}
export interface DisablePolicyRequest {
    id: string[];
}
export interface EnablePolicyRequest {
    id: string[];
}
export interface AddOrUpdateSchemaRequest {
    schemas: Schema[];
}
export interface ListSchemasRequest {
}
export interface GetSchemaRequest {
    id: string[];
}
export interface DeleteSchemaRequest {
    id: string[];
}
export interface ReloadStoreRequest {
    wait: boolean;
}
export declare const PlanResourcesRequest: {
    fromJSON(object: any): PlanResourcesRequest;
    toJSON(message: PlanResourcesRequest): unknown;
};
export declare const CheckResourceSetRequest: {
    fromJSON(object: any): CheckResourceSetRequest;
    toJSON(message: CheckResourceSetRequest): unknown;
};
export declare const ResourceSet: {
    fromJSON(object: any): ResourceSet;
    toJSON(message: ResourceSet): unknown;
};
export declare const ResourceSet_InstancesEntry: {
    fromJSON(object: any): ResourceSet_InstancesEntry;
    toJSON(message: ResourceSet_InstancesEntry): unknown;
};
export declare const AttributesMap: {
    fromJSON(object: any): AttributesMap;
    toJSON(message: AttributesMap): unknown;
};
export declare const AttributesMap_AttrEntry: {
    fromJSON(object: any): AttributesMap_AttrEntry;
    toJSON(message: AttributesMap_AttrEntry): unknown;
};
export declare const CheckResourceBatchRequest: {
    fromJSON(object: any): CheckResourceBatchRequest;
    toJSON(message: CheckResourceBatchRequest): unknown;
};
export declare const CheckResourceBatchRequest_BatchEntry: {
    fromJSON(object: any): CheckResourceBatchRequest_BatchEntry;
    toJSON(message: CheckResourceBatchRequest_BatchEntry): unknown;
};
export declare const CheckResourcesRequest: {
    fromJSON(object: any): CheckResourcesRequest;
    toJSON(message: CheckResourcesRequest): unknown;
};
export declare const CheckResourcesRequest_ResourceEntry: {
    fromJSON(object: any): CheckResourcesRequest_ResourceEntry;
    toJSON(message: CheckResourcesRequest_ResourceEntry): unknown;
};
export declare const AuxData: {
    fromJSON(object: any): AuxData;
    toJSON(message: AuxData): unknown;
};
export declare const AuxData_JWT: {
    fromJSON(object: any): AuxData_JWT;
    toJSON(message: AuxData_JWT): unknown;
};
export declare const AddOrUpdatePolicyRequest: {
    fromJSON(object: any): AddOrUpdatePolicyRequest;
    toJSON(message: AddOrUpdatePolicyRequest): unknown;
};
export declare const ListAuditLogEntriesRequest: {
    fromJSON(object: any): ListAuditLogEntriesRequest;
    toJSON(message: ListAuditLogEntriesRequest): unknown;
};
export declare const ListAuditLogEntriesRequest_TimeRange: {
    fromJSON(object: any): ListAuditLogEntriesRequest_TimeRange;
    toJSON(message: ListAuditLogEntriesRequest_TimeRange): unknown;
};
export declare const ServerInfoRequest: {
    fromJSON(_: any): ServerInfoRequest;
    toJSON(_: ServerInfoRequest): unknown;
};
export declare const ListPoliciesRequest: {
    fromJSON(object: any): ListPoliciesRequest;
    toJSON(message: ListPoliciesRequest): unknown;
};
export declare const GetPolicyRequest: {
    fromJSON(object: any): GetPolicyRequest;
    toJSON(message: GetPolicyRequest): unknown;
};
export declare const DisablePolicyRequest: {
    fromJSON(object: any): DisablePolicyRequest;
    toJSON(message: DisablePolicyRequest): unknown;
};
export declare const EnablePolicyRequest: {
    fromJSON(object: any): EnablePolicyRequest;
    toJSON(message: EnablePolicyRequest): unknown;
};
export declare const AddOrUpdateSchemaRequest: {
    fromJSON(object: any): AddOrUpdateSchemaRequest;
    toJSON(message: AddOrUpdateSchemaRequest): unknown;
};
export declare const ListSchemasRequest: {
    fromJSON(_: any): ListSchemasRequest;
    toJSON(_: ListSchemasRequest): unknown;
};
export declare const GetSchemaRequest: {
    fromJSON(object: any): GetSchemaRequest;
    toJSON(message: GetSchemaRequest): unknown;
};
export declare const DeleteSchemaRequest: {
    fromJSON(object: any): DeleteSchemaRequest;
    toJSON(message: DeleteSchemaRequest): unknown;
};
export declare const ReloadStoreRequest: {
    fromJSON(object: any): ReloadStoreRequest;
    toJSON(message: ReloadStoreRequest): unknown;
};
//# sourceMappingURL=request.d.ts.map